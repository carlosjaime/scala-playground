
/**
 * Created by IntelliJ IDEA.
 * User: pmishra
 * Date: 24/8/11
 * Time: 2:17 PM
 * To change this template use File | Settings | File Templates.
 */
  /*
  Each new term in the Fibonacci sequence is generated by adding the previous two terms.
  By starting with 1 and 2, the first 10 terms will be:
1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
By considering the terms in the Fibonacci sequence whose values do not exceed four million,
find the sum of the even-valued terms.
   */

import org.specs2.mutable._
import org.specs2.ScalaCheck
import org.specs2.time.{Time, SimpleTimer}

class Problem2Spec extends Specification with ScalaCheck {

    "Sum of all fibonacci numbers for maximum number 35" should {
      "be 44" in {
        val p = new Problem2
        p.Solve(35) must_== 44
        p.SolveFromInternet(35) must_== 44
      }
    }

    "Sum of all fibonacci numbers for maximum number 4000000" should {
      "be 44" in {
        new Problem2().Solve(4000000) must_== 4613732
        new Problem2().SolveFromInternet(4000000) must_== 4613732
      }
    }
}